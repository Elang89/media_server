version: "3.8"

services:

  zookeeper:
    container_name: zookeeper
    restart: unless-stopped
    image: zookeeper:latest
    networks:
      cloud_manager:
        ipv4_address: 172.23.0.5
    ports:
      - 2181:2181
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000

  kafka:
    container_name: kafka
    restart: unless-stopped
    image: kafka:latest
    networks:
      cloud_manager:
        ipv4_address: 172.23.0.7
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      - KAFKA_BROKER_ID=0 
      - KAFKA_ZOOKEEPER_CONNECT=172.23.0.5:2181 
      - KAFKA_LISTENERS=LISTENER_DOCKER://172.23.0.7:29092,LISTENER_HOST://172.23.0.7:9092 
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_DOCKER://172.23.0.7:29092,LISTENER_HOST://172.23.0.7:9092 
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_DOCKER:PLAINTEXT,LISTENER_HOST:PLAINTEXT 
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_DOCKER 
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=100 
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true 
      - KAFKA_LOG_RETENTION_MS=10000 
      - KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS=5000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper 
  
  elasticsearch:
    container_name: elasticsearch
    restart: unless-stopped
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.8
    networks:
      cloud_manager: 
        ipv4_address: 172.23.0.9
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  logstash: 
    container_name: logstash
    restart: unless-stopped
    image: docker.elastic.co/logstash/logstash:7.17.8
    networks:
      cloud_manager:
        ipv4_address: 172.23.0.8
    volumes:
      - ./.docker/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - kafka
      - elasticsearch

  grafana:
    container_name: grafana
    restart: unless-stopped
    image: grafana/grafana-oss:latest
    networks:
      cloud_manager:
        ipv4_address: 172.23.0.10
    ports:
      - 3000:3000
    depends_on:
      - logstash

  ant:
    container_name: antmediaserver
    restart: unless-stopped
    image: antmediaserver:latest
    networks:
      cloud_manager:
        ipv4_address: 172.23.0.2
    volumes:
      - ./streams:/usr/local/antmedia/webapps/WebRTCApp/streams
    ports:
      - 5080:5080
    depends_on:
      - kafka

  gstreamer:
    container_name: gstreamer
    restart: unless-stopped
    image: gstreamer:latest
    networks:
      cloud_manager:
        ipv4_address: 172.23.0.3
    working_dir: /start
    command: bash -c "sleep infinity"
  
  mongo:
    container_name: mongo
    image: mongo:latest
    networks:
      cloud_manager:
        ipv4_address: 172.23.0.4 
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=admin 
      - MONGO_INITDB_DATABASE=backup_db
    ports:
      - 27017:27017
  

networks:
  cloud_manager:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.23.0.0/24
          gateway: 172.23.0.1

volumes:
  elasticsearch-data:

